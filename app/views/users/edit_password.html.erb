<div id="title"> <%= t('edit_pass') %> </div>

<%= form_for(@user) do |f| %>
  <div id="input_form" class="col-xs-10 col-sm-4 col-md-4 col-lg-4" style="margin-bottom: 20px;">

    <div class="field">
      <%= label_tag "old_password", t('old_pass') %><br>
      <%= password_field_tag "user[old_password]" %>
    </div>

    <div class="field">
      <%= label_tag "new_password", t('new_pass') %><br>
      <%= password_field_tag "user[new_password]" %>
    </div>

    <div class="field">
      <%= label_tag "password_confirmation", t('password_confirmation') %><br>
      <%= password_field_tag "user[password_confirmation]" %>
    </div>

    <% if flash[:notice] %>
      <div class="warning warning-error" style="color:#dd4b39;">
        <%= t('signup_error') %>
      </div>
    <% end %>

    <div id="change_pass"><%= link_to t('back_to_profile'), edit_user_path(@user) %></div>


    <div class="actions">
      <% if session[:role] == "Admin" %>
        <%= f.submit "Submit", :id => "submit_form" %>
      <% else %>
        <%= f.submit t("edit"), :id => "submit_form" %>
      <% end %>
      </div>
    </div>

<% end %>

<script>
$(function() {
  var user_old_password = $("#user_old_password");
  var user_new_password = $("#user_new_password");
  var user_password_confirm = $("#user_password_confirmation");
  var submit = $("#submit_form");
  // Functions
  function show_warning(field, msg_bs, msg_en) {
    $(".warning-error").remove();

    field.css("border-color", "#dd4b39"); 
    var warning_label = null;
    if (locale  == "bs")
      warning_label = $("<p></p>").text(msg_bs);
    else 
      warning_label = $("<p></p>").text(msg_en);
    warning_label.attr("class","warning");
    warning_label.css("color","#dd4b39");
    field.parent().append(warning_label);
  }

  function remove_warning(field) {
    field.parent().children("p").remove(".warning");
    field.css("border-color", "#b7b7b7");
  }
  function validate_field(field) {
    var number_of_children = field.parent().children().length;
    if (!field.val()) {
      if(number_of_children == 3) show_warning(field, "Ovo polje ne može ostati prazno.", "This field can't be empty.");
    }
    else {
      if (number_of_children > 3) remove_warning(field);
    }
  }

  function checkPasswords() {
    if(user_new_password.val() && user_password_confirm.val()) {
      remove_warning(user_password_confirm);
      if(user_new_password.val() != user_password_confirm.val()) {
        show_warning(user_password_confirm, "Šifre se ne podudaraju.", "Passwords don't match.");
        return false;
      }
      else {
        return true;
      }
    }
    return true;
  }
  user_old_password.blur(function(){
    validate_field($(this));
    checkPasswords();
  });
  user_new_password.blur(function(){
    validate_field($(this));
    checkPasswords();
  });
  user_password_confirm.blur(function(){
    validate_field($(this));
    checkPasswords();
  });
  // Onsubmit validation
  $("form").submit(function() {
    var has_empty = false;
    $("#user_old_password, #user_new_password, #user_password_confirmation", this).each(function() {

      if(!$(this).val()) {
        has_empty = true;
        validate_field($(this));      
      }

    });

    if (has_empty)  {
      return false;
    }

    if(!checkPasswords()) {
      return false;
    }

    return true;
  });
});
</script>
